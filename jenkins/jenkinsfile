pipeline {
    agent any

    environment {
        GOOGLE_APPLICATION_CREDENTIALS = "${WORKSPACE}/terraform/terraform-key.json"
    }

    stages {
        stage('Definir Ambiente') {
            steps {
                script {
                    env.AMBIENTE = (env.BRANCH_NAME == 'main') ? 'prod' : 'dev'
                }
            }
        }

        stage('Checkout do CÃ³digo') {
            steps {
                git branch: env.BRANCH_NAME, credentialsId: 'github-cred', url: 'git@github.com:ivanmd96/projeto-cloud-gcp.git'
            }
        }

        stage('Terraform Init') {
            steps {
                sh "cd terraform && terraform init"
            }
        }

        stage('Terraform Apply') {
            steps {
                withCredentials([
                    string(credentialsId: 'ssh-public-key', variable: 'SSH_PUB_KEY'),
                    file(credentialsId: 'terraform-key', variable: 'GOOGLE_CREDENTIALS')
                ]) {
                    sh """
                        cd terraform
                        terraform apply \
                          -var='ssh_public_key=$SSH_PUB_KEY' \
                          -var-file=environments/${env.AMBIENTE}.tfvars \
                          -auto-approve
                    """
                }
            }
        }

        stage('Gerar Inventory Ansible') {
            steps {
                dir('terraform') {
                    script {
                        def instance_ip = sh(
                            script: "terraform output -raw instance_ip",
                            returnStdout: true
                        ).trim()

                        writeFile file: '../ansible/inventory', text: """[vm]
vm ansible_host=${instance_ip} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa
"""
                    }
                }
            }
        }

        stage('Configurar Ansible') {
            steps {
                sh 'cd ansible && ansible-playbook -i inventory playbook.yml'
            }
        }
    }
}
